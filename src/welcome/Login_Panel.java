/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package welcome;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author inahm
 */
public class Login_Panel extends javax.swing.JPanel {

    /**
     * Creates new form Login_Panel
     */
    public Login_Panel() {
        initComponents();
        setDocumentListener();
    }

    /**
     *
     * @param icon holds the icon that are going to resize.
     * @return return the resized icon.
     */
    ImageIcon getScaledImage(ImageIcon icon) {

        Image image = icon.getImage(); // transform it 
        Image newimg = image.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
        icon = new ImageIcon(newimg);  // transform it back
        return icon;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        usernameStatus = new javax.swing.JLabel();
        passwordStatus = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        signin = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        loadingPanel = new javax.swing.JPanel();
        loading = new javax.swing.JLabel();
        system = new javax.swing.JLabel();

        setFocusCycleRoot(true);
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        password.setColumns(16);
        password.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        password.setToolTipText("Enter Your Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 12, 6);
        jPanel1.add(password, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dosis", 0, 20)); // NOI18N
        jLabel1.setText("Enter Your Username: - ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 12, 6);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dosis", 0, 20)); // NOI18N
        jLabel2.setText("Enter Your Password: - ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 12, 6);
        jPanel1.add(jLabel2, gridBagConstraints);

        username.setColumns(16);
        username.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        username.setToolTipText("Enter Your Username Here");
        username.setMinimumSize(new java.awt.Dimension(16, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 12, 6);
        jPanel1.add(username, gridBagConstraints);
        jPanel1.add(usernameStatus, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel1.add(passwordStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jPanel1, gridBagConstraints);

        buttonsPanel.setLayout(new java.awt.GridBagLayout());

        signin.setFont(new java.awt.Font("Oswald", 1, 14)); // NOI18N
        signin.setMnemonic('s');
        signin.setText("Sign_in");
        signin.setToolTipText("Sign in your account");
        signin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 14);
        buttonsPanel.add(signin, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Oswald", 1, 14)); // NOI18N
        jButton1.setMnemonic('f');
        jButton1.setText("Forget_Password");
        jButton1.setToolTipText("Click here for resetting your password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 14);
        buttonsPanel.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(23, 0, 23, 0);
        add(buttonsPanel, gridBagConstraints);

        loadingPanel.setLayout(new java.awt.GridBagLayout());

        loading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadingPanel.add(loading, new java.awt.GridBagConstraints());

        system.setFont(new java.awt.Font("Dosis", 1, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        loadingPanel.add(system, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        add(loadingPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void signinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signinActionPerformed

        if (true) {
            loading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loading.gif")));

            new Thread() {
                @Override
                public void run() {
                    String hold="Login into System";
                    for (int i = 0; i < 5; i++) {
                        try {
                            Thread.sleep(600);
                        } catch (InterruptedException ex) {
                        }
                        hold+=".";
                        system.setText(hold);
                    }
                }
            }.start();

        }


    }//GEN-LAST:event_signinActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel loading;
    private javax.swing.JPanel loadingPanel;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordStatus;
    private javax.swing.JButton signin;
    private javax.swing.JLabel system;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameStatus;
    // End of variables declaration//GEN-END:variables

    // Custom Variable for Our Ease
    ImageIcon tick;
    ImageIcon cross;

    // Critical Initialization
    {
        try {
            tick = new ImageIcon(getClass().getResource("/Icons/tick.png"));
            cross = new ImageIcon(getClass().getResource("/Icons/cross.png"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Icons not Found", "Attention!", JOptionPane.ERROR_MESSAGE);
        }

    }

    // End of custom variable Declaration
    void setDocumentListener() {

        username.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                System.out.println("Value Update");
            }

            public void removeUpdate(DocumentEvent e) {

                if (username.getText().equals("ahmad")) {
                    setBorder(true);
                } else {
                    setBorder(false);
                }

            }

            public void insertUpdate(DocumentEvent e) {

                if (username.getText().equals("ahmad")) {
                    setBorder(true);
                } else {
                    setBorder(false);
                }
            }

            /**
             *
             * @param status check the status either the username is correct or
             * not.
             *
             */
            void setBorder(boolean status) {

                if (status) {
                    username.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 255, 102)));
                    usernameStatus.setIcon(getScaledImage(tick));
                } else {
                    username.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));
                    usernameStatus.setIcon(getScaledImage(cross));
                }

            }

        }); // end of DocumentListener for usernameField.

        password.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                System.out.println("Value Update");
            }

            public void removeUpdate(DocumentEvent e) {

                if (password.getText().equals("ahmad")) {
                    setBorder(true);
                } else {
                    setBorder(false);
                }

            }

            public void insertUpdate(DocumentEvent e) {

                if (password.getText().equals("ahmad")) {
                    setBorder(true);
                } else {
                    setBorder(false);
                }

            }

            /**
             *
             * @param status check the status either the username is correct or
             * not.
             *
             */
            void setBorder(boolean status) {

                if (status) {
                    password.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 255, 102)));
                    passwordStatus.setIcon(getScaledImage(tick));
                } else {
                    password.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));
                    passwordStatus.setIcon(getScaledImage(cross));
                }

            }

        }); // end of DocumentListener for PasswordField.

    }  // end of setDocumentListener

}
